{"version":3,"sources":["components/Home.js","components/MapComponent.js","components/MapPage.js","components/EditTripForm.js","components/Trip.js","components/Trips.js","components/NewTripForm.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","id","authCallback","err","data","axios","method","url","params","username","screen_name","headers","then","response","setUserCallback","setUserInformationCallback","trips","catch","error","console","log","consumerKey","process","consumerSecret","callbackUrl","styles","width","height","overflow","MapComponent","userInformation","useState","map","setMap","mapMarkers","mapContainer","useRef","useEffect","mapboxgl","accessToken","Map","container","current","style","center","zoom","addControl","NavigationControl","on","resize","initializeMap","forEach","marker","remove","length","trip","places","place","coordinates","el","document","createElement","backgroundImage","className","popup","Popup","offset","setText","location","push","Marker","setLngLat","setPopup","addTo","ref","MapPage","EditTripForm","index","title","date","tripPlaces","editTripCallback","setToggleEdit","otherFields","setOtherFields","setPlaces","onOtherFieldsUpdate","event","newOtherFields","target","name","value","onSubmit","preventDefault","type","onChange","maxLength","required","pattern","key","e","updatedPlaces","onPlacesUpdate","placeholder","onPlacesUrlUpdate","onClick","newPlaces","splice","removePlaceField","Trip","deleteTripCallback","toggleEdit","allPlaces","src","alt","window","confirm","Trips","allTrips","NewTripForm","month","year","toggleAddNew","setToggleAddNew","addNewTripCallback","Dashboard","currentUser","onLogoutCallback","App","user","setUser","setUserInformation","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.48802d67.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport TwitterLogin from \"react-twitter-login\";\nimport axios from 'axios';\nimport './Home.css';\n\nconst Home = (props) => {\n\n\tconst authHandler = (err, data) => {\n\t\t// console.log({err}, {data});\n\t\taxios({\n\t\t\tmethod: 'post',\n\t\t\t// url: 'http://twitter.local:5000/users',\n      url: 'https://the-travel-mapp.herokuapp.com/users',\n      params: {\n\t\t\t\tusername: data.screen_name,\n\t\t\t},\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t\t\t\"Access-Control-Allow-Methods\": \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\n\t\t\t\t\"Access-Control-Allow-Headers\": \"Origin, X-Auth-Token, Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\n\t\t\t}\n    })\n    .then((response) => {\n\t\t\tprops.setUserCallback(data.screen_name);\n\t\t\tprops.setUserInformationCallback(response.data.trips);\n    })\n    .catch((error) => {\n      console.log(error);\n\t\t});\n\t};\n\t\n\treturn (\n\t\t<div id=\"homepage\">\n\t\t\t<header>\n\t\t\t\t<h1>the travel mApp</h1>\n\t\t\t</header>\n\n\t\t\t<main>\n\t\t\t\t<TwitterLogin\n\t\t\t\t\tauthCallback={authHandler}\n\t\t\t\t\tconsumerKey={process.env.REACT_APP_TWITTER_KEY}\n\t\t\t\t\tconsumerSecret={process.env.REACT_APP_TWITTER_SECRET}\n\t\t\t\t\tcallbackUrl={'https://the-travel-mapp.herokuapp.com'}\n\t\t\t\t\t// callbackUrl={'http://twitter.local:3000/'}\n\t\t\t\t/>\n\t\t\t</main>\n\n\t\t\t<footer>\n\t\t\t\t<p>\n\t\t\t\t\tAn application for logging and visualizing<br />your travels and adventures!\n\t\t\t\t</p>\n\t\t\t</footer>\n\t\t</div>\n\t);\n\t\n};\n\nHome.propTypes = {\n\tsetUserCallback: PropTypes.func.isRequired,\n\tsetUserInformationCallback: PropTypes.func.isRequired\n};\n\nexport default Home;","import React, { useEffect, useState, useRef } from 'react';\nimport mapboxgl from \"mapbox-gl\";\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './MapComponent.css';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n  width: \"90vw\",\n\theight: \"65vh\",\n\toverflow: \"hidden\",\n};\n\nconst MapComponent = ({userInformation}) => {\n  const [map, setMap] = useState(null);\n  const [mapMarkers, setMapMarkers] = useState([]);\n  const mapContainer = useRef(null);\n\n  const loadMarkers = () => {\n    userInformation.forEach((trip) => {\n      for (const place of trip.places) {\n        if (place.coordinates === 'invalid') {\n          continue;\n        };\n\n        let el = document.createElement('div');\n        el.style.backgroundImage =\n          `url(${place.url})`;\n        el.style.width = \"75px\";\n        el.style.height = \"75px\";\n        el.className = 'marker';\n\n        let popup = new mapboxgl.Popup({ offset: 40 }).setText(\n          place.location\n        );\n\n        mapMarkers.push(new mapboxgl.Marker(el)\n          .setLngLat(place.coordinates)\n          .setPopup(popup)\n          .addTo(map));\n      }\n    });\n  }\n\n  useEffect(() => {\n    mapboxgl.accessToken = process.env.REACT_APP_MAP_API;\n\n    const initializeMap = ({ setMap, mapContainer }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/jessicaliang/ckcv0sd9t00861irp6uuv5xh6\", // stylesheet location\n        center: [0, 16],\n        zoom: 1\n      });\n\n      map.addControl(new mapboxgl.NavigationControl());\n\t\t\n      map.on(\"load\", () => {\n\t\t\t\tsetMap(map);\n        map.resize();\n      });\n    };\n\n\t\tif (!map) initializeMap({ setMap, mapContainer });\n  }, [map]);\n\n  useEffect(() => {\n    if (!map) { return }\n\n    mapMarkers.forEach((marker) => {\n      marker.remove();\n    });\n    mapMarkers.length = 0;\n\n    loadMarkers();\n  }, [userInformation, map])\n\n  return (\n    <div ref={el => (mapContainer.current = el)} style={styles} />\n  );\n};\n\nMapComponent.propTypes = {\n\tuserInformation: PropTypes.array.isRequired,\n}\n\nexport default MapComponent;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MapComponent from './MapComponent';\nimport './MapPage.css';\n\nconst MapPage = (props) => {\n\n\treturn (\n\t\t<div className=\"map-container\">\n\t\t\t<MapComponent {...props} />\n\t\t</div>\n\t);\n\t\n};\n\nMapPage.propTypes = {\n\tuserInformation: PropTypes.array.isRequired,\n}\n\nexport default MapPage;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './EditTripForm.css';\n\nconst EditTripForm = ({index, title, date, tripPlaces, editTripCallback, setToggleEdit}) => {\n\t// Form Fields\n\tconst [otherFields, setOtherFields] = useState({\n\t\ttitle: title,\n\t\tdate: date,\n\t});\n\tconst [places, setPlaces] = useState(tripPlaces);\n\n\tconst addPlaceField = (event) => {\n\t\tevent.preventDefault();\n\t\tconst newPlaces = [...places];\n\t\tnewPlaces.push({\n\t\t\tlocation: '',\n\t\t\turl: ''\n\t\t});\n\t\tsetPlaces(newPlaces);\n\t}\n\n\tconst removePlaceField = (event, index) => {\n\t\tevent.preventDefault();\n\t\tconst newPlaces = [...places];\n\t\tnewPlaces.splice(index, 1);\n\t\tsetPlaces(newPlaces);\n\t}\n\n\tconst onPlacesUpdate = (event, index) => {\n\t\tconst updatedPlaces = [...places];\n\t\tupdatedPlaces[index][\"location\"] = event.target.value;\n\t\tsetPlaces(updatedPlaces);\n\t}\n\n\tconst onPlacesUrlUpdate = (event, index) => {\n\t\tconst updatedPlaces = [...places];\n\t\tupdatedPlaces[index][\"url\"] = event.target.value;\n\t\tsetPlaces(updatedPlaces);\n\t}\n\t\n\tconst onOtherFieldsUpdate = (event) => {\n\t\tconst newOtherFields = {...otherFields};\n\t\tnewOtherFields[event.target.name] = event.target.value;\n\t\tsetOtherFields(newOtherFields);\n\t}\n\n\tconst onSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tsetToggleEdit(false);\n\t\teditTripCallback(otherFields, places, index)\n\t}\n\n\treturn(\n\t\t<div className=\"edit_trip_form_container\">\n\t\t\t<h2>Edit</h2>\n\t\t\t<form onSubmit={ onSubmit }>\n\t\t\t\t<section className=\"edit_trip_form_container--title\">\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<strong>Title </strong><br />\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tvalue={ otherFields[\"title\"] } \n\t\t\t\t\t\t\tname=\"title\" \n\t\t\t\t\t\t\tonChange={ onOtherFieldsUpdate } \n\t\t\t\t\t\t\tmaxLength=\"26\" \n\t\t\t\t\t\t\trequired />\n\t\t\t\t\t</label>\n\t\t\t\t</section>\n\t\t\t\t<section className=\"edit_trip_form_container--date\">\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<strong>Date </strong><br />\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tvalue={ otherFields[\"date\"] } \n\t\t\t\t\t\t\tname=\"date\" \n\t\t\t\t\t\t\tonChange={ onOtherFieldsUpdate } \n\t\t\t\t\t\t\tpattern=\"\\d{1,2}-\\d{4}\" \n\t\t\t\t\t\t\tmaxLength=\"7\" \n\t\t\t\t\t\t\trequired />\n\t\t\t\t\t</label>\n\t\t\t\t</section>\n\t\t\t\t<section className=\"edit_trip_form_container--places\">\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<strong>Places </strong><br />\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tplaces.map((place, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<section key={ index }>\n\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" value={ place.location } \n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => onPlacesUpdate(e, index) } \n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"name of place\" \n\t\t\t\t\t\t\t\t\t\t\trequired /> \n\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" value={ place.url } \n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => onPlacesUrlUpdate(e, index) } \n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"image url\"\n\t\t\t\t\t\t\t\t\t\t  required />\n\t\t\t\t\t\t\t\t\t\t<button onClick = {(e) => removePlaceField(e, index) }>X</button>\n\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</label>\n\t\t\t\t</section>\n\t\t\t\t<section className=\"edit_trip_form_container--buttons\">\n\t\t\t\t\t<button onClick={ addPlaceField }>Add Place</button>\n\t\t\t\t\t<button onClick={() => setToggleEdit(false)}>Close</button>\n\t\t\t\t\t<input type=\"submit\" value=\"Save\" onSubmit={ onSubmit } />\n\t\t\t\t</section>\n\t\t\t</form>\n\t\t</div>\n\t);\n\n};\n\nEditTripForm.propTypes = {\n\tindex: PropTypes.number.isRequired,\n\ttitle: PropTypes.string.isRequired,\n\tdate: PropTypes.string.isRequired,\n\t// places: PropTypes.array.isRequired,\n\teditTripCallback: PropTypes.func.isRequired,\n\tsetToggleEdit: PropTypes.func.isRequired\n}\n\nexport default EditTripForm;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport EditTripForm from './EditTripForm';\nimport './Trip.css';\n\nconst Trip = ({index, title, date, places, editTripCallback, deleteTripCallback}) => {\n\n\tconst [toggleEdit, setToggleEdit] = useState(false);\n\n\tconst allPlaces = places.map((place, index) => {\n\t\treturn (\n\t\t\t<li key={ index } className=\"trip_listing_container--place\">\n\t\t\t\t<img src={ place.url } alt={ place.location } />\n\t\t\t\t{ place.location }\n\t\t\t</li>\n\t\t);\n\t});\n\n\treturn (\n\t\t<section className=\"trip_listing_container\">\n\t\t\t{(toggleEdit === false) ? (\n\t\t\t\t<section>\n\t\t\t\t\t<section className=\"trip_list_container--header\">\n\t\t\t\t\t\t<h2>{ title }</h2>\n\t\t\t\t\t\t<p className=\"trip_listing_container--date\">\n\t\t\t\t\t\t\t<em>{ date }</em>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</section>\n\t\t\t\t\t<h3>Places</h3> \n\t\t\t\t\t<section className=\"trip_listing_container--places-container\">\n\t\t\t\t\t\t{ allPlaces }\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className=\"trip_listing_container--buttons\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tonClick = {() => setToggleEdit(true)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tonClick={() => { if (window.confirm('Are you sure you wish to delete this item?')) deleteTripCallback(index) } }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</section>\n\t\t\t\t</section>\n\t\t\t) : ( \n\t\t\t\t<EditTripForm \n\t\t\t\t\tkey={ index }\n\t\t\t\t\tindex={ index }\n\t\t\t\t\ttitle={ title } \n\t\t\t\t\tdate={ date }\n\t\t\t\t\ttripPlaces={ places }\n\t\t\t\t\teditTripCallback = { editTripCallback }\n\t\t\t\t\tsetToggleEdit = { setToggleEdit }\n\t\t\t\t/>\n\t\t\t)}\n\t\t</section>\n\t);\n\t\n};\n\nTrip.propTypes = {\n\tindex: PropTypes.number.isRequired,\n\ttitle: PropTypes.string.isRequired,\n\tdate: PropTypes.string.isRequired,\n\tplaces: PropTypes.array.isRequired,\n\teditTripCallback: PropTypes.func.isRequired,\n\tdeleteTripCallback: PropTypes.func.isRequired\n}\n\nexport default Trip;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Trip from './Trip';\nimport './Trips.css';\n\n\nconst Trips = (props) => {\n\t\n\tlet allTrips = []\n\tallTrips = props.userInformation.map((trip, index) => {\n\t\treturn (\n\t\t\t<Trip\n\t\t\t\tkey={ index }\n\t\t\t\tindex={ index }\n\t\t\t\ttitle={ trip.title }\n\t\t\t\tdate={ trip.date }\n\t\t\t\tplaces= { trip.places }\n\t\t\t\teditTripCallback = { props.editTripCallback }\n\t\t\t\tdeleteTripCallback = { props.deleteTripCallback }\n\t\t\t/> \n\t\t);\n\t});\n\t\t\n\treturn (\n\t\t<div className='all-trips-container'>\n\t\t\t<h1>Your Trips</h1>\n\t\t\t{ allTrips }\n\t\t</div>\n\t);\n};\n\nTrips.propTypes = {\n\tuserInformation: PropTypes.array.isRequired,\n\teditTripCallback: PropTypes.func.isRequired,\n\tdeleteTripCallback: PropTypes.func.isRequired\n}\n\nexport default Trips;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewTripForm.css';\n\nconst NewTripForm = (props) => {\n\t// Form Fields\n\tconst [otherFields, setOtherFields] = useState({\n\t\ttitle: '',\n\t\tmonth: '',\n\t\tyear: ''\n\t});\n\tconst [places, setPlaces] = useState([[\"\", \"\"]]);\n\tconst [toggleAddNew, setToggleAddNew] = useState(false);\n\n\tconst addPlaceField = (event) => {\n\t\tevent.preventDefault();\n\t\tconst newPlaces = [...places];\n\t\tnewPlaces.push([\"\", \"\"]);\n\t\tsetPlaces(newPlaces);\n\t}\n\n\tconst removePlaceField = (event, index) => {\n\t\tevent.preventDefault();\n\t\tconst newPlaces = [...places];\n\t\tnewPlaces.splice(index, 1);\n\t\tsetPlaces(newPlaces);\n\t}\n\n\tconst onPlacesUpdate = (event, index) => {\n\t\tconst updatedPlaces = [...places];\n\t\tupdatedPlaces[index][0] = event.target.value;\n\t\tsetPlaces(updatedPlaces);\n\t}\n\n\tconst onPlacesUrlUpdate = (event, index) => {\n\t\tconst updatedPlaces = [...places];\n\t\tupdatedPlaces[index][1] = event.target.value;\n\t\tsetPlaces(updatedPlaces);\n\t}\n\t\n\tconst onOtherFieldsUpdate = (event) => {\n\t\tconst newOtherFields = {...otherFields};\n\t\tnewOtherFields[event.target.name] = event.target.value;\n\t\tsetOtherFields(newOtherFields);\n\t}\n\n\tconst onSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tprops.addNewTripCallback(otherFields, places);\n\n\t\tsetOtherFields({\n\t\t\ttitle: '',\n\t\t\tmonth: '',\n\t\t\tyear: ''\n\t\t});\n\t\tsetPlaces([[\"\", \"\"]]);\n\t}\n\n\treturn(\n\t\t<div>\n\t\t{(toggleAddNew) ? (\n\t\t\t<div className=\"new_trip_form_container\">\n\t\t\t\t<h2>Add a New Trip</h2>\n\t\t\t\t<form onSubmit={ onSubmit }>\n\t\t\t\t\t<section className=\"new_trip_form_container--title\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<strong>Title </strong><br />\n\t\t\t\t\t\t\t<input type=\"text\" value={ otherFields[\"title\"] } name=\"title\" onChange={ onOtherFieldsUpdate } maxLength=\"26\" required />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className=\"new_trip_form_container--date\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<strong>Date </strong><br />\n\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"month\" value={ otherFields[\"month\"] } name=\"month\" onChange={ onOtherFieldsUpdate } pattern=\"\\d*\" maxLength=\"2\" required /> /  \n\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"year\" value={ otherFields[\"year\"] } name=\"year\" onChange={ onOtherFieldsUpdate } pattern=\"\\d*\" maxLength=\"4\" required />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className=\"new_trip_form_container--places\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<strong>Places </strong><br />\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tplaces.map((place, index) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<section key={ index }>\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"name of place\" value={ place[0] } onChange={(e) => onPlacesUpdate(e, index) } required /> \n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"image url\" value={ place[1] } onChange={(e) => onPlacesUrlUpdate(e, index) } required />\n\t\t\t\t\t\t\t\t\t\t\t<button onClick = {(e) => removePlaceField(e, index) }>X</button>\n\t\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className=\"new_trip_form_container--buttons\">\n\t\t\t\t\t\t<button onClick={ addPlaceField }>Add Place</button>\n\t\t\t\t\t\t<input type=\"submit\" value=\"Add New Trip\" onSubmit={ onSubmit } />\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<button onClick={() => setToggleAddNew(false)}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</section>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<button onClick={() => setToggleAddNew(true)} className=\"new_trip_form_button\">\n\t\t\t\t\tAdd New Trip\n\t\t\t\t</button>\n\t\t\t)}\n\t\t</div>\n\t);\n\n};\n\nNewTripForm.propTypes = {\n\taddNewTripCallback: PropTypes.func.isRequired\n}\n\nexport default NewTripForm;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MapPage from './MapPage';\nimport Trips from './Trips';\nimport NewTripForm from './NewTripForm';\nimport './Dashboard.css';\nimport axios from 'axios';\n\nconst Dashboard = (props) => {\n\n\tconst addNewTrip = (otherFields, places) => {\n\t\taxios({\n\t\t\tmethod: 'post',\n\t\t\t// url: \"http://twitter.local:5000/trips\",\n      url: \"https://the-travel-mapp.herokuapp.com/trips\",\n      params: {\n\t\t\t\tusername: props.currentUser,\n\t\t\t\tdate: `${otherFields[\"month\"]}-${otherFields[\"year\"]}`,\n\t\t\t\ttitle: otherFields[\"title\"],\n\t\t\t\tplaces: places\n\t\t\t},\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t\t\t\"Access-Control-Allow-Methods\": \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\n\t\t\t\t\"Access-Control-Allow-Headers\": \"Origin, X-Auth-Token, Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\n\t\t\t}\n    })\n    .then((response) => {\n\t\t\tprops.setUserInformationCallback(response.data.trips);\n    })\n    .catch((error) => {\n      console.log(error);\n\t\t});\n\t}\n\n\tconst editTrip = (otherFields, places, index) => {\n\t\taxios({\n\t\t\tmethod: 'patch',\n\t\t\t// url: \"http://twitter.local:5000/trips\",\n      url: \"https://the-travel-mapp.herokuapp.com/trips\",\n      params: {\n\t\t\t\tindex: index,\n\t\t\t\tusername: props.currentUser,\n\t\t\t\tdate: otherFields[\"date\"],\n\t\t\t\ttitle: otherFields[\"title\"],\n\t\t\t\tplaces: places\n\t\t\t},\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t\t\t\"Access-Control-Allow-Methods\": \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\n\t\t\t\t\"Access-Control-Allow-Headers\": \"Origin, X-Auth-Token, Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\n\t\t\t}\n    })\n    .then((response) => {\n\t\t\tprops.setUserInformationCallback(response.data.trips);\n    })\n    .catch((error) => {\n      console.log(error);\n\t\t});\n\t}\n\n\tconst deleteTrip = (id) => {\n\t\taxios({\n\t\t\tmethod: 'delete',\n\t\t\t// url: \"http://twitter.local:5000/trips\",\n      url: \"https://the-travel-mapp.herokuapp.com/trips\",\n      data: {\n\t\t\t\tusername: props.currentUser,\n\t\t\t\tkey: id\n\t\t\t},\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t\t\t\"Access-Control-Allow-Methods\": \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\n\t\t\t\t\"Access-Control-Allow-Headers\": \"Origin, X-Auth-Token, Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\n\t\t\t}\n    })\n    .then((response) => {\n\t\t\tprops.setUserInformationCallback(response.data.trips);\n    })\n    .catch((error) => {\n      console.log(error);\n\t\t});\n\t}\n\n\treturn (\n\t\t<div id=\"dashboard\">\n\t\t\t<header>\n\t\t\t\t<section>\n\t\t\t\t\t{ props.currentUser }\n\t\t\t\t</section>\n\t\t\t\t<h1>the travel mApp</h1>\n\t\t\t\t<section>\n\t\t\t\t\t<button onClick={ props.onLogoutCallback }>Log Out</button>\n\t\t\t\t</section>\n\t\t\t</header>\n\t\t\t<main id=\"dashboard__main_content\">\n\t\t\t\t\t<MapPage \n\t\t\t\t\t\tuserInformation={ props.userInformation } \n\t\t\t\t\t/>\n\t\t\t\t\t<NewTripForm \n\t\t\t\t\t\taddNewTripCallback = { addNewTrip }\n\t\t\t\t\t/>\n\t\t\t\t\t<Trips \n\t\t\t\t\t\tuserInformation={ props.userInformation } \n\t\t\t\t\t\teditTripCallback = { editTrip }\n\t\t\t\t\t\tdeleteTripCallback = { deleteTrip }\n\t\t\t\t\t/>\t\t\t\n\t\t\t</main>\n\t\t</div>\n\t);\n\t\n};\n\nDashboard.propTypes = {\n\tonLogoutCallback: PropTypes.func.isRequired,\n\tsetUserInformationCallback: PropTypes.func.isRequired,\n\tcurrentUser: PropTypes.string.isRequired,\n\tuserInformation: PropTypes.array.isRequired\n};\n\nexport default Dashboard;","import React, { useState } from 'react';\nimport Home from './components/Home';\nimport Dashboard from './components/Dashboard';\nimport './App.css';\n\nconst App = () => {\n\n  const [user, setUser] = useState('');\n  const [userInformation, setUserInformation] = useState(null);\n  \n  const onLogout = (event) => {\n\t\tevent.preventDefault(); \n    setUser('');\n\t};\n\n  return (\n    <div>\n      {(user === '') && \n        <Home \n          setUserCallback = { setUser } \n          setUserInformationCallback = { setUserInformation } \n        />\n      }\n      {(user !== '') && (userInformation !== null) &&\n        <Dashboard \n          onLogoutCallback = { onLogout } \n          currentUser={ user } \n          setUserInformationCallback = { setUserInformation } \n          userInformation = { userInformation } \n        />\n      }\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}